<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xmu.oomall.order.mapper.OrderMapper">

    <!-- Written by Han Li @ 26/11/2020 14:57-->

    <!-- Order 表的所有列 -->
    <sql id="Order_Column_List">
        id, customer_id, shop_id, order_sn, pid, consignee, region_id, address, mobile, message,
        order_type, freight_price, coupon_id, coupon_activity_id, discount_price, origin_price,
        presale_id, groupon_discount, rebate_num, confirm_time, shipment_sn, state, substate,
        be_deleted, gmt_created, gmt_modified
    </sql>

    <!-- TODO - Order 表在插入时要插入的列 -->
    <sql id="Order_Insert_List">
        cuseomer_id
    </sql>

    <!-- TODO - OrderItem 表在插入时要插入的列 -->
    <sql id="OrderItem_Insert_List">
        order_id
    </sql>

    <!-- 将 Order 的所有 OrderItem 取出并创建 1-n 联系的 ResultMap -->
    <!-- autoMapping 表示除了列举出来的字段，其他字段进行自动对应 -->
    <resultMap type="OrderPo" id="OrderAndOrderItemResultMap" autoMapping="true">
        <!-- 用 <id> 指定 Po 的数据 id -->
        <id property="id" column="id"/>
        <!-- 用 <collection> 可以让 MyBatis 自动将【连接查询】得到的多条记录合并成一个对象中的 Collection -->
        <collection property="orderItemList" ofType="cn.edu.xmu.oomall.order.model.po.OrderItemPo" autoMapping="true">
            <id property="id" column="item_id"/>
            <result property="orderId" column="id"/>
            <result property="goodsSkuId" column="item_goods_sku_id"/>
            <result property="quantity" column="item_quantity"/>
            <result property="price" column="item_price"/>
            <result property="discount" column="item_discount"/>
            <result property="name" column="item_name"/>
            <result property="couponId" column="item_coupon_id"/>
            <result property="couponActivityId" column="item_coupon_activity_id"/>
            <result property="beShareId" column="item_be_share_id"/>
            <result property="gmtCreated" column="item_gmt_created"/>
            <result property="gmtModified" column="item_gmt_modified"/>
        </collection>
    </resultMap>

    <!-- 查找订单 (不拼装订单项目) -->
    <select id="findOrder" resultType="OrderPo">
        SELECT
        <!-- 用 <include> 汇入已经定义好的 SQL 块 -->
        <include refid="Order_Column_List"/>
        FROM `orders`
        <!-- 用 <where> 构造一系列 where -->
        <where>
            id = #{param1}
            <if test="customerId != null">and customer_id = #{param2}</if>
            <if test="shopId != null">and shop_id = #{param3}</if>
            <if test="includeDeleted == false">and be_deleted is null</if>
        </where>
    </select>

    <!-- 查找订单 (拼装订单项目) -->
    <select id="findOrderWithItem" resultMap="OrderAndOrderItemResultMap">
        SELECT
        <!-- 以下是 order 的资讯 -->
        o.id as id,
        customer_id,
        shop_id,
        order_sn,
        pid,
        consignee,
        region_id,
        address,
        mobile,
        message,
        order_type,
        freight_price,
        o.coupon_id as coupon_id,
        o.coupon_activity_id as coupon_activity_id,
        discount_price,
        origin_price,
        presale_id,
        groupon_discount,
        rebate_num,
        confirm_time,
        shipment_sn,
        state,
        substate,
        be_deleted,
        o.gmt_created as gmt_created,
        o.gmt_modified as gmt_modified,
        <!-- 以下是 order item 的资讯 (没有放 oi.order_id 因为没必要) -->
        oi.id as item_id,
        oi.goods_sku_id as item_goods_sku_id,
        oi.quantity as item_quantity,
        oi.price as item_price,
        oi.discount as item_discount,
        oi.name as item_name,
        oi.coupon_id as item_coupon_id,
        oi.coupon_activity_id as item_coupon_activity_id,
        oi.be_share_id as item_be_share_id,
        oi.gmt_created as item_gmt_created,
        oi.gmt_modified as item_gmt_modified

        FROM `orders` o LEFT JOIN `order_item` oi
        ON o.id = oi.order_id
        <where>
            o.id = #{param1}
            <if test="customerId != null">and o.customer_id = #{param2}</if>
            <if test="shopId != null">and o.shop_id = #{param3}</if>
            <if test="includeDeleted == false">and o.be_deleted is null</if>
        </where>
    </select>

    <!-- 修改订单 -->
    <update id="updateOrder" parameterType="OrderEditPo">
        UPDATE `orders`
        <!-- 用 <set> 指定一系列 update set 的字段 -->
        <set>
            <if test="consignee!=null and consignee!=''">consignee = #{consignee}, </if>
            <if test="regionId!=null">region_id = #{regionId}, </if>
            <if test="address!=null and address!=''">address = #{address}, </if>
            <if test="mobile!=null and mobile!=''">mobile = #{mobile}, </if>
            <if test="message!=null and message!=''">message = #{message}, </if>
            <if test="beDeleted!=null and beDeleted==true">be_deleted = 1, </if>
            <if test="beDeleted!=null and beDeleted==false">be_deleted = null, </if>
            gmt_modified = CURRENT_TIME
        </set>
        WHERE id = #{id}
    </update>

</mapper>

